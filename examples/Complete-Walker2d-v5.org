#+TITLE: Walker2d-Expert-v5
#+SUBTITLE: Benchmarking BES on the Walker2d-Expert-v5 dataset.

First, let's load our package.

#+BEGIN_SRC lisp 
  (ql:quickload :bes :force t)
  (in-package :bes)
#+END_SRC

#+RESULTS:
: #<PACKAGE "BES">

Next, let's load our dataset.

#+BEGIN_SRC lisp
  (defdataset *Walker2d-Expert-v5*
    :path "~/.datasets/Walker2d-Expert-v5")
#+END_SRC

#+RESULTS:
: *WALKER2D-EXPERT-V5*

And then let's define the experiment configuration.

#+BEGIN_SRC lisp :exports both
(defexperiment *Walker2d-v5*
  :batch-size 1000
  :instruction-set (ADD SUB MUL DIV SIN COS LOG EXP)
  :registers (R from 1 to 14) 
  :observations (OBS from 1 to 17)
  :output-registers (R from 1 to 6)
  :constant-range '(-10.0 10.0)
  :objectives (mean-squared-error)
  :tournament-size 4
  :num-threads 8
  :population-size 1000
  :generations 1000
  :minimum-program-length 8
  :maximum-program-length 128
  :observation-probability 0.5
  :constant-probability 0.5
  :mutate-instruction-probability 1.0
  :mutate-register-probability 0.5
  :mutate-operation-probability 0.25
  :mutate-constant-probability 0.25
  :add-instruction-probability 1.0
  :delete-instruction-probability 1.0
  :swap-instruction-probability 1.0
  :constant-mutation-std 1.0
  :maximum-instruction-count 256)
#+END_SRC

#+RESULTS:
: *WALKER2D-V5*

Now let's run the evolution, since we're benchmarking we'll do this over 10 trials.
Each time it'll produce a file called results.csv, so we'll take this and rename it for each trial.

 #+BEGIN_SRC lisp
   (defparameter *best-individuals* (make-hash-table))

   (defun store-best-individual (trial-id genotype)
     (setf (gethash trial-id *best-individuals*) genotype))

   (defun get-best-individual (trial-id)
     (gethash trial-id *best-individuals*))

   (defun save-population (population trial)
     (with-open-file (stream (format nil "runs/Walker2d-Expert-v5/trial-~A.lisp" trial)
                             :direction :output
                             :if-exists :supersede
                             :if-does-not-exist :create)
       (loop for genotype in population
             do (format stream "~A~%" genotype))))

   (loop for trial from 1 to 10
         do 
            (format t "Starting trial ~A/~A...~%" trial 10)
            (ensure-directories-exist "runs/Walker2d-Expert-v5/")
            (let* ((solutions (evolve *Walker2d-v5* *Walker2d-Expert-v5*))
                   (best-individual (car (argmin solutions #'cadr))))
              (save-population (mapcar #'car solutions) trial)
              (store-best-individual trial best-individual))
            (rename-file "results.csv" (format nil "runs/Walker2d-Expert-v5/results-~A.csv" trial)))
       #+END_SRC

#+RESULTS:
: NIL

And now let's record our best individuals

#+BEGIN_SRC lisp :results output :exports both
  (loop for trial from 1 to 10
        do (format t "~A~%" (get-best-individual trial)))
#+END_SRC

  Next, let's load our companion library for interacting with the MuJoCo Gymnasium environments.

 #+BEGIN_SRC lisp
    (ql:quickload :bes-gym :force t)
  #+END_SRC


Now let's evaluate the best individual from each trial on 10 seeds from the Walker2d-v5 environment.

 #+BEGIN_SRC lisp
   (loop for trial from 1 to 10
         do (loop for seed in '(738491 204583 991627 458720 174392 618305 837154 265009 781463 549128)
                  do (let ((champion (get-best-individual trial)))
                       (bes-gym::rollout champion "Walker2d-v5" seed *Walker2d-v5*)))
            (rename-file "evaluations.csv" (format nil "runs/Walker2d-Expert-v5/evaluations-~A.csv" trial)))
  #+END_SRC
