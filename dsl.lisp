'(TPG
  (LEARNERS
   (LEARNER L1 (PROGRAM P1 ((R1 SIN OBS1))) (PROGRAM P7 ((R1 SIN OBS2))))
   (LEARNER L2 (PROGRAM P2 ((R1 SIN OBS2))) (GOTO T3))
   (LEARNER L3 (PROGRAM P3 ((R1 SIN OBS3))) SQUARE)
   (LEARNER L4 (PROGRAM P4 ((R1 SIN OBS4))) CIRCLE)
   (LEARNER L5 (PROGRAM P5 ((R1 SIN OBS5))) RHOMBUS)
   (LEARNER L6 (PROGRAM P6 ((R1 SIN OBS6))) TRIANGLE))
  (TEAMS
   (TEAM T1 L3 L4 L5)
   (TEAM T2 L2 L4 L6)
   (TEAM T3 L1 L3)))


;; new feature action programs

'(LINEAR-GP
  (PROGRAMS
   (PROGRAM P1 ((R1 SIN OBS1) (R2 SIN OBS2)))
   (PROGRAM P2 ((R2 SIN OBS2) (R3 SIN OBS1)))))

(EVAL-TPG TPG DATASET) =>
((T1 . ((LOSS . 0.123) (COMPLEXITY . 12)))
 (T2 . ((LOSS . 0.208) (COMPLEXITY . 15)))
 (T3 . ((LOSS . 0.097) (COMPLEXITY . 10))))

(EVAL-LINEAR-GP LGP DATASET) =>
((P1 . ((LOSS . 0.123) (COMPLEXITY . 13)))
 (P1 . ((LOSS . 0.123) (COMPLEXITY . 13)))
 (P1 . ((LOSS . 0.123) (COMPLEXITY . 13))))

(TOURNAMENT-SELECTION (EVAL-TPG TPG DATASET)) =>
T3

(REMOVE-DANGLING-LEARNERS TPG) =>
TPG

;; MUTATIONS
                             
;; (MUTATE-TPG

;;  will call

;;  MUTATE-TEAM

;;  will call
 
;;  MUTATE-LEARNER

;;  will call

;;  MUTATE-PROGRAM)

;; TEAM EXECUTION
                             
;; (EXECUTE-TEAM TPG TEAM-ID OBSERVATIONS)
;; =>
;; '(1.0 2.0 3.0) | SQUARE

;; ;; PROGRAM EXECUTION

;; (EXECUTE-PROGRAM PROGRAM OBSERVATIONS)
;; =>
;; '(1.0 2.0 3.0 4.0)

EVOLUTIONARY LOOP

GENERATIONS <- 10

TPG <- INITIALIZE
REPEAT GENERATIONS
    SCORES <- EVAL-TPG DATASET
    TPG <- SELECT TPG SCORES
    TPG <- REPLACE TPG
    TPG <- REMOVE-DANGLING-LEARNERS
    TPG <- MUTATION TPG
END
TPG

;; 
USING LINEAR-GP
POPULATION <- (INITIALIZE)

REPEAT GENERATIONS
    SCORES <- (EVAL-LINEAR-GP)
    POPULATION <- (SELECT POPULATION SCORES)
    POPULATION <- (REPLACEMENT POPULATION SCORES)
    POPULATION <- (MUTATE POPULATION)


;;
USING TANGLED-PROGRAM-GRAPHS
POPULATION <- (INITIALIZE)

REPEAT GENERATIONS
    SCORES <- (EVALUATE-TPG)
    POPULATION <- (SELECT POPULATION SCORES)
    POPULATION <- MUTATE-TPG 
END



